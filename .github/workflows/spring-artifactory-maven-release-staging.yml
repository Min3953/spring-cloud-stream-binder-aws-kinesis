name: Build with Maven and Stage Release to Artifactory

on:
  workflow_call:
    inputs:
      releaseVersion:
        description: 'Release version like 3.0.0-M1, 3.1.0-RC1, 3.2.0 etc.'
        required: true
        type: string
      nextDevelopmentVersion:
        description: 'Next development version like 3.1.1-SNAPSHOT'
        required: true
        type: string
      mavenArgs:
        description: 'Additional mvn command arguments: goals, plugins etc. The `install` is included.'
        required: false
        type: string

jobs:
  staging:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ACTIONS_REPO_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          cache: 'maven'

      - uses: jfrog/setup-jfrog-cli@v3
        with:
          version: 2.50.4
        env:
          JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}

      - name: Configure JFrog Cli
        run: |
          jf mvnc \
            --use-wrapper=true \
            --repo-resolve-releases=libs-milestone \
            --repo-resolve-snapshots=snapshot \
            --repo-deploy-releases=libs-staging-local \
            --repo-deploy-snapshots=libs-snapshot-local
          echo JFROG_CLI_BUILD_NAME=${{ github.event.repository.name }}-${{ inputs.releaseVersion }} >> $GITHUB_ENV
          echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

      - name: Set Release Version
        run: |
          jf mvn versions:set -DnewVersion=${{ inputs.releaseVersion }} -DgenerateBackupPoms=false

      - name: Build and Publish
        run: |
          jf mvn install ${{ inputs.mavenArgs }}
          jf rt build-publish

      - name: Capture Test Results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/target/surefire-reports/**/*.*'
          retention-days: 3

      - name: Tag Release and Next Development Version
        run: |
          git config --global user.name 'Spring Builds'
          git config --global user.email 'builds@springframework.org'
          git commit -a -m "[artifactory-release] Release version ${{ inputs.releaseVersion }}"
          git tag "v${{ inputs.releaseVersion }}"
          git push --tags origin
          jf mvn versions:set -DnewVersion=${{ inputs.nextDevelopmentVersion }} -DgenerateBackupPoms=false
          git commit -a -m "[artifactory-release] Next development version"
          git push origin

      - name: Print Build Info
        run: |
          echo "::notice ::Artifactory Build Name=$JFROG_CLI_BUILD_NAME"
          echo "::notice ::Artifactory Build Number=$JFROG_CLI_BUILD_NUMBER"